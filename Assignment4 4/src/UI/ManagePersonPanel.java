/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package UI;

import Model.Person;
import Model.PersonDirectory;
import java.awt.HeadlessException;
import java.io.BufferedReader;
import java.io.File;
import java.io.FileReader;
import java.io.IOException;
import java.text.DateFormat;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Date;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.RowFilter;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableRowSorter;

/**
 *
 * @author sundermetpalli
 */
public class ManagePersonPanel extends javax.swing.JPanel {

    /**
     * Creates new form ManagePersonPanel
     */
    ArrayList<Person> selectedPerson;
    private PersonDirectory personDirectory;
    
    public ManagePersonPanel(PersonDirectory personDirectory) {
        initComponents();
        this.personDirectory = personDirectory;
        this.selectedPerson=personDirectory.getPersonHistory();
        populateTable();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents

    private void btnAddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddActionPerformed
        // TODO add your handling code here:
        if (emptycheck()==Boolean.TRUE)
        {  try{
            Person person=personDirectory.addPerson();
            person.setFirstName(txtFN1.getText());
            person.setLastName(txtLN1.getText());
            person.setAge(Integer.parseInt(txtAge1.getText()));
            person.setCommunity(txtComm1.getText());
            person.setCity(txtCity1.getText());
            person.setHouse(Integer.parseInt(txtHouse1.getText()));
            person.setStateID(Integer.parseInt(txtStateID.getText()));
            JOptionPane.showMessageDialog(this, "Person Added!");
        }catch (Exception e){JOptionPane.showMessageDialog(this, "Enter all values correctly.");};
        
            refreshFields();
            populateTable();
        }
        else
        {
            JOptionPane.showMessageDialog(this, "Enter all values");
        }
        
    }//GEN-LAST:event_btnAddActionPerformed

    private void PersonDetailsTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_PersonDetailsTableMouseClicked
        // TODO add your handling code here:
        DefaultTableModel md= (DefaultTableModel) PersonDetailsTable.getModel();

        
        txtFN.setText(String.valueOf(md.getValueAt(selectedRowIndex, 0)));
        txtLN.setText(String.valueOf(md.getValueAt(selectedRowIndex, 1)));
        txtAge.setText(String.valueOf(md.getValueAt(selectedRowIndex, 2)));
        txtCity.setText(String.valueOf(md.getValueAt(selectedRowIndex, 3)));
        txtComm.setText(String.valueOf(md.getValueAt(selectedRowIndex, 4)));
        txtHouse.setText(String.valueOf(md.getValueAt(selectedRowIndex, 5)));
        txtStateID1.setText(String.valueOf(md.getValueAt(selectedRowIndex, 7)));
        
        
        
    }//GEN-LAST:event_PersonDetailsTableMouseClicked

    private void btnDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteActionPerformed
        // TODO add your handling code here:
        
        int selectedRow= PersonDetailsTable.getSelectedRow();
        if (selectedRow < 0) {
            JOptionPane.showMessageDialog(this, "Please select a row from table.");
            return;
        }
        else 
        {  
        DefaultTableModel model= (DefaultTableModel) PersonDetailsTable.getModel();
        Person selectedPerson= (Person)model.getValueAt(selectedRow, 0);
        personDirectory.deletePerson(selectedPerson);
        JOptionPane.showMessageDialog(null, "Person Details Deleted!" );
        populateTable();
            
        }
        
    }//GEN-LAST:event_btnDeleteActionPerformed

    private void btnSearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSearchActionPerformed
        // TODO add your handling code here:
        
        DefaultTableModel model= (DefaultTableModel) PersonDetailsTable.getModel();
        TableRowSorter<DefaultTableModel> tr= new TableRowSorter<DefaultTableModel>(model);
        String search=txtSearch.getText();
        PersonDetailsTable.setRowSorter(tr);
        tr.setRowFilter(RowFilter.regexFilter(search.trim(),7));
        
         
    }//GEN-LAST:event_btnSearchActionPerformed

    private void btnImportActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnImportActionPerformed
        // TODO add your handling code here:
   JFileChooser chooser=new JFileChooser();
        chooser.showOpenDialog(null);
        File f=chooser.getSelectedFile();
        String filename=f.getAbsolutePath();
        
        //String path="/Users/sundermetpalli/PersonDetails.csv";
        String line="";
            BufferedReader br= new BufferedReader(new FileReader(filename));
            JOptionPane.showMessageDialog(null, "Imported File Data!");
            while((line=br.readLine()) != null){
              String[] values=line.split(",");
               Person p= personDirectory.addPerson();
               p.setFirstName(values[i]);
               p.setLastName(values[i+1]);
               p.setAge(Integer.parseInt(values[i+2]));
               p.setCity(values[i+3]);
               p.setCommunity(values[i+4]);
               p.setHouse(Integer.parseInt(values[i+5]));
               p.setStateID(Integer.parseInt(values[i+6]));

            }
        
            JOptionPane.showMessageDialog(null, "No File Selected!");
        }
  
    }//GEN-LAST:event_btnImportActionPerformed


 private void populateTable() {
        DefaultTableModel model= (DefaultTableModel) PersonDetailsTable.getModel();
        model.setRowCount(0);
        for(Person p : personDirectory.getPersonHistory()){
        Object[] row=new Object[8];
        row[0]=p;
        row[1]=p.getLastName();
        row[2]=p.getAge();
        row[3]=p.getCity();
        row[4]=p.getCommunity();
        row[5]=p.getHouse();
        row[6]=p.getPatient();
        row[7]=p.getStateID();
        model.addRow(row);
        

        }
        
    }
 


}
